name: CI/CD Pipeline - TeeTime Store

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  GCP_REGION: us-central1
  GCP_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
  GCR_REPOSITORY: teetime-store
  SERVICE_NAME: teetime-store-service

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test required files
        run: |
          echo "🔍 Testing project structure..."
          required_files=("src/index.html" "Dockerfile" "nginx.conf")
          for file in "${required_files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "❌ Missing required file: $file"
              exit 1
            fi
            echo "✅ Found: $file"
          done

      - name: Test Docker build
        run: |
          echo "🐳 Testing Docker build..."
          docker build -t teetime-test .
          echo "✅ Docker build successful"

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build Docker image
        run: |
          docker build -t ${{ env.GCR_REPOSITORY }} .
          docker tag ${{ env.GCR_REPOSITORY }} us-central1-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.GCR_REPOSITORY }}/app:latest
          docker tag ${{ env.GCR_REPOSITORY }} us-central1-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.GCR_REPOSITORY }}/app:${{ github.sha }}

      - name: Push to Artifact Registry
        run: |
          docker push us-central1-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.GCR_REPOSITORY }}/app:latest
          docker push us-central1-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.GCR_REPOSITORY }}/app:${{ github.sha }}
          echo "📦 Image pushed successfully!"

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image us-central1-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.GCR_REPOSITORY }}/app:${{ github.sha }} \
            --region ${{ env.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --port 80 \
            --memory 512Mi \
            --cpu 1 \
            --max-instances 1 \
            --timeout 300s

      - name: Get Service URL
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \
            --region ${{ env.GCP_REGION }} \
            --platform managed \
            --format 'value(status.url)')
          echo "🎉 Deployment Successful!"
          echo "🌐 Your application is live at: $SERVICE_URL"
          echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_ENV